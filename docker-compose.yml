# version: '3.7'
# secrets:
#   database_password:
#     file: ./configs/secrets/database_password.txt
# services:

#   elendil:
#     build: .
#     restart: always
#     depends_on:
#       - database
#       # - database:
#           # condition: service_healthy
#     #   - redis:
#     #       condition: service_healthy

#     command: python app/manage.py runserver 0.0.0.0:8000
#     # command: bash -c "chmod +x docker-entrypoint.sh && sh docker-entrypoint.sh"
#     volumes:
#       - ./:/app
#     # secrets:
#     #   - database_password
#     ports:
#       - "8000:8000"

#   database:
#     image: postgres:16.2
#     restart: always
#     user: root
#     # password: 2izqnc9vfy2aw2iqbjk903s75
#   #   volumes:
#   #     - postgres_data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=database
#       - POSTGRES_USER=root
#       # - POSTGRES_PASSWORD:mypassword/
#       - POSTGRES_PASSWORD_FILE=/run/secrets/database_password
#     secrets:
#       - database_password
#     # healthcheck:
#     #   test: ["CMD-SHELL", "pg_isready -U root -d postgres"]
#     #   interval: 10s
#     #   timeout: 5s
#     #   retries: 5
#     ports:
#       - "5432:5432"



version: '3.8'

services:
  elendil:
    build: .
    command: python app/manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
  db:
    image: postgres:16.2
    restart: always
    environment:
       POSTGRES_USER: root
       POSTGRES_PASSWORD: postgres
        #  timeout: 5s
#     #   retries: 5
    ports:
      - "5432:5432"
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready"]
    #   interval: 1s
    #   timeout: 5s
    #   retries: 10
